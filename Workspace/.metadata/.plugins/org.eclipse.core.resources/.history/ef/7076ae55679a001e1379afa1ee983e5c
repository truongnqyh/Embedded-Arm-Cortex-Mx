/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	__asm("SVC #0x08");

	register unit32_t data __asm("r0");

	printf(" data = %ld\n", data);
    /* Loop forever */
	for(;;);
}

__attribute__ ((naked)) void SVC_Handler(void)
{
	__asm("MRS R0,MSP");
	__asm("B SVC_Handler_c");

}

void SVC_Handler_c(uint32_t *pstackPointer)
{
	uint8_t SVC_number = 0;
	uint8_t *pMSP_Addr = (uint8_t *)pstackPointer[6];
	pMSP_Addr --;
	pMSP_Addr --;
	SVC_number = *pMSP_Addr;
	printf("SVC number: %d\n", SVC_number);
}

